/*************************
 * DO NOT EDIT THIS FILE *
 * (please & thanks!)    *
 *************************/

import { DoctorDetail, QueryIndex } from './query-index';
import _test, { ExecutionContext, TestInterface } from 'ava';

import { Feature } from './data-contracts';
import { buildIndex } from './index';

interface Context {
  index: QueryIndex;
}

const test = _test as TestInterface<Context>;
type EC = ExecutionContext<Context>;

test.before('create index', t => {
  t.context.index = buildIndex({
    minDoctorScore: 80,
    minFeatureScore: 75,
  }, {
    doctorScores: [
      {
        name: 'John Dorian',
        npi: '31158299703',
        score: 93,
        zipCode: '10012',
      },
      {
        name: 'Christopher Turk',
        npi: '37789895608',
        score: 87,
        zipCode: '10012',
      },
      {
        name: 'Perry Cox',
        npi: '36316641944',
        score: 96,
        zipCode: '10012',
      },
      {
        name: 'Elliot Reid',
        npi: '37695648407',
        score: 94,
        zipCode: '10012',
      },
      {
        name: 'Denise Mahoney',
        npi: '30889020178',
        score: 80,
        zipCode: '10012',
      },
      {
        name: 'Kim Briggs',
        npi: '37323270532',
        score: 76,
        zipCode: '10012',
      },
      {
        name: 'Molly Clock',
        npi: '34311919416',
        score: 87,
        zipCode: '10012',
      },
      {
        name: 'Jeffrey Steadman',
        npi: '32620686932',
        score: 89,
        zipCode: '10012',
      },
      {
        name: 'Simon Reid',
        npi: '36977259860',
        score: 84,
        zipCode: '10002',
      },
      {
        name: 'Peter Fisher',
        npi: '31674231089',
        score: 86,
        zipCode: '10010',
      }
    ],
    featureScores: [
      //#region John Dorian
      {
        npi: '31158299703',
        feature: Feature.OnlyNecessaryLabs,
        score: 90,
      },
      {
        npi: '31158299703',
        feature: Feature.OnlyNecessaryInvasiveStudies,
        score: 95
      },
      {
        npi: '31158299703',
        feature: Feature.OnlyNecessaryImagingStudies,
        score: 88,
      },
      {
        npi: '31158299703',
        feature: Feature.OnlyIndicatedMedications,
        score: 94,
      },
      //#endregion

      //#region Christopher Turk
      {
        npi: '37789895608',
        feature: Feature.OnlyNecessaryInvasiveStudies,
        score: 90,
      },
      {
        npi: '37789895608',
        feature: Feature.OnlyNecessaryImagingStudies,
        score: 85,
      },
      {
        npi: '37789895608',
        feature: Feature.PTBeforeSurgery,
        score: 70,
      },
      //#endregion

      //#region Perry Cox
      {
        npi: '36316641944',
        feature: Feature.OnlyNecessaryLabs,
        score: 98,
      },
      {
        npi: '36316641944',
        feature: Feature.OnlyNecessaryInvasiveStudies,
        score: 97
      },
      {
        npi: '36316641944',
        feature: Feature.OnlyNecessaryImagingStudies,
        score: 95,
      },
      {
        npi: '36316641944',
        feature: Feature.OnlyIndicatedMedications,
        score: 94,
      },
      //#endregion

      //#region Elliot Reid
      {
        npi: '37695648407',
        feature: Feature.OnlyNecessaryLabs,
        score: 97,
      },
      {
        npi: '37695648407',
        feature: Feature.OnlyNecessaryInvasiveStudies,
        score: 96,
      },
      {
        npi: '37695648407',
        feature: Feature.OnlyNecessaryImagingStudies,
        score: 95,
      },
      {
        npi: '37695648407',
        feature: Feature.OnlyIndicatedMedications,
        score: 72,
      },
      //#endregion

      //#region Denise Mahoney
      {
        npi: '30889020178',
        feature: Feature.OnlyNecessaryInvasiveStudies,
        score: 85,
      },
      {
        npi: '30889020178',
        feature: Feature.OnlyNecessaryImagingStudies,
        score: 73,
      },
      {
        npi: '30889020178',
        feature: Feature.PTBeforeSurgery,
        score: 76,
      },
      {
        npi: '30889020178',
        feature: Feature.OnlyIndicatedMedications,
        score: 83,
      },
      //#endregion

      //#region Kim Briggs
      {
        npi: '37323270532',
        feature: Feature.OnlyNecessaryInvasiveStudies,
        score: 72
      },
      {
        npi: '37323270532',
        feature: Feature.OnlyNecessaryImagingStudies,
        score: 73,
      },
      {
        npi: '37323270532',
        feature: Feature.PTBeforeSurgery,
        score: 65,
      },
      {
        npi: '37323270532',
        feature: Feature.OnlyIndicatedMedications,
        score: 80,
      },
      //#endregion

      //#region Molly Clock
      {
        npi: '34311919416',
        feature: Feature.OnlyNecessaryLabs,
        score: 84,
      },
      {
        npi: '34311919416',
        feature: Feature.OnlyNecessaryInvasiveStudies,
        score: 91
      },
      {
        npi: '34311919416',
        feature: Feature.OnlyNecessaryImagingStudies,
        score: 87,
      },
      {
        npi: '34311919416',
        feature: Feature.OnlyIndicatedMedications,
        score: 83,
      },
      //#endregion

      //#region Jeffrey Steadman
      {
        npi: '32620686932',
        feature: Feature.OnlyNecessaryLabs,
        score: 90,
      },
      {
        npi: '32620686932',
        feature: Feature.OnlyNecessaryInvasiveStudies,
        score: 94,
      },
      {
        npi: '32620686932',
        feature: Feature.OnlyNecessaryImagingStudies,
        score: 73,
      },
      {
        npi: '32620686932',
        feature: Feature.OnlyIndicatedMedications,
        score: 84,
      },
      //#endregion

      //#region Simon Reid
      {
        npi: '36977259860',
        feature: Feature.OnlyNecessaryLabs,
        score: 89,
      },
      {
        npi: '36977259860',
        feature: Feature.OnlyNecessaryInvasiveStudies,
        score: 85,
      },
      {
        npi: '36977259860',
        feature: Feature.OnlyNecessaryImagingStudies,
        score: 91,
      },
      {
        npi: '36977259860',
        feature: Feature.PTBeforeSurgery,
        score: 79,
      },
      {
        npi: '36977259860',
        feature: Feature.OnlyIndicatedMedications,
        score: 90,
      },
      //#endregion

      //#region Peter Fisher
      {
        npi: '31674231089',
        feature: Feature.OnlyNecessaryLabs,
        score: 54,
      },
      {
        npi: '31674231089',
        feature: Feature.OnlyNecessaryInvasiveStudies,
        score: 95
      },
      {
        npi: '31674231089',
        feature: Feature.OnlyNecessaryImagingStudies,
        score: 77,
      },
      {
        npi: '31674231089',
        feature: Feature.OnlyIndicatedMedications,
        score: 94,
      },
      //#endregion
    ],
    availableAppointments: [
      //#region John Dorian
      { // 30 min
        npi: '31158299703',
        startTime: new Date('2020-03-02T10:00-05:00'),
        endTime:   new Date('2020-03-02T10:30-05:00'),
      },
      { // 15 min
        npi: '31158299703',
        startTime: new Date('2020-03-04T15:15-05:00'),
        endTime:   new Date('2020-03-04T15:30-05:00'),
      },
      { // 30 min
        npi: '31158299703',
        startTime: new Date('2020-03-06T09:00-05:00'),
        endTime:   new Date('2020-03-06T09:30-05:00'),
      },
      { // 30 min
        npi: '31158299703',
        startTime: new Date('2020-03-06T09:30-05:00'),
        endTime:   new Date('2020-03-06T10:00-05:00'),
      },
      //#endregion

      //#region Christopher Turk
      { // 60 min
        npi: '37789895608',
        startTime: new Date('2020-03-01T17:00-05:00'),
        endTime:   new Date('2020-03-01T18:00-05:00'),
      },
      //#endregion

      //#region Elliot Reid
      { // 15 min
        npi: '37695648407',
        startTime: new Date('2020-03-03T13:45-05:00'),
        endTime:   new Date('2020-03-03T14:00-05:00'),
      },
      { // 30 min
        npi: '37695648407',
        startTime: new Date('2020-03-04T16:00-05:00'),
        endTime:   new Date('2020-03-04T16:30-05:00'),
      },
      { // 15 min
        npi: '37695648407',
        startTime: new Date('2020-03-05T09:15-05:00'),
        endTime:   new Date('2020-03-05T09:30-05:00'),
      },
      { // 15 min
        npi: '37695648407',
        startTime: new Date('2020-03-05T14:00-05:00'),
        endTime:   new Date('2020-03-05T14:15-05:00'),
      },
      { // 30 min
        npi: '37695648407',
        startTime: new Date('2020-03-06T15:30-05:00'),
        endTime:   new Date('2020-03-06T16:00-05:00'),
      },
      //#endregion

      //#region Denise Mahoney
      { // 30 min
        npi: '30889020178',
        startTime: new Date('2020-03-04T11:00-05:00'),
        endTime:   new Date('2020-03-04T11:30-05:00'),
      },
      { // 15 min
        npi: '30889020178',
        startTime: new Date('2020-03-04T14:30-05:00'),
        endTime:   new Date('2020-03-04T14:45-05:00'),
      },
      { // 30 min
        npi: '30889020178',
        startTime: new Date('2020-03-06T17:00-05:00'),
        endTime:   new Date('2020-03-06T17:30-05:00'),
      },
      //#endregion

      //#region Kim Briggs
      {  // 30 min
        npi: '37323270532',
        startTime: new Date('2020-03-03T17:30-05:00'),
        endTime:   new Date('2020-03-03T18:00-05:00'),
      },
      { // 60 min
        npi: '37323270532',
        startTime: new Date('2020-03-04T09:00-05:00'),
        endTime:   new Date('2020-03-04T10:00-05:00'),
      },
      { // 60 min
        npi: '37323270532',
        startTime: new Date('2020-03-05T14:30-05:00'),
        endTime:   new Date('2020-03-05T15:30-05:00'),
      },
      //#endregion

      //#region Molly Clock
      { // 15 min
        npi: '34311919416',
        startTime: new Date('2020-03-05T14:30-05:00'),
        endTime:   new Date('2020-03-05T14:45-05:00'),
      },
      { // 15 min
        npi: '34311919416',
        startTime: new Date('2020-03-05T14:45-05:00'),
        endTime:   new Date('2020-03-05T15:00-05:00'),
      },
      { // 15 min
        npi: '34311919416',
        startTime: new Date('2020-03-06T17:15-05:00'),
        endTime:   new Date('2020-03-06T17:30-05:00'),
      },
      //#endregion

      //#region Jeffrey Steadman
      { // 60 min
        npi: '32620686932',
        startTime: new Date('2020-03-02T04:40-05:00'),
        endTime:   new Date('2020-03-02T15:30-05:00'),
      },
      { // 60 min
        npi: '32620686932',
        startTime: new Date('2020-03-05T14:30-05:00'),
        endTime:   new Date('2020-03-05T15:30-05:00'),
      },
      {  // 30 min
        npi: '32620686932',
        startTime: new Date('2020-03-06T09:45-05:00'),
        endTime:   new Date('2020-03-06T10:15-05:00'),
      },
      //#endregion

      //#region Simon Reid
      { // 30 min
        npi: '36977259860',
        startTime: new Date('2020-03-05T13:30-05:00'),
        endTime:   new Date('2020-03-05T14:00-05:00'),
      },
      { // 30 min
        npi: '36977259860',
        startTime: new Date('2020-03-06T11:00-05:00'),
        endTime:   new Date('2020-03-06T11:30-05:00'),
      },
      //#endregion

      //#region Peter Fisher
      { // 15 min
        npi: '31674231089',
        startTime: new Date('2020-03-05T14:30-05:00'),
        endTime:   new Date('2020-03-05T14:45-05:00'),
      },
      { // 30 min
        npi: '31674231089',
        startTime: new Date('2020-03-06T09:30-05:00'),
        endTime:   new Date('2020-03-06T10:00-05:00'),
      },
      { // 15 min
        npi: '31674231089',
        startTime: new Date('2020-03-06T13:00-05:00'),
        endTime:   new Date('2020-03-06T13:15-05:00'),
      },
      //#endregion
    ],
  })
})

test('findDoctors', t => {
  const summaries = t.context.index.findDoctors({
    currentTime: new Date('2020-03-03T09:00-05:00'),
    appointmentLengthMinutes: 30,
    limit: 4,
    zipCode: '10012',
  });

  t.deepEqual(summaries, [
    {
      name: 'Elliot Reid',
      npi: '37695648407',
      firstAvailability: new Date('2020-03-04T16:00-05:00'),
    },
    {
      name: 'John Dorian',
      npi: '31158299703',
      firstAvailability: new Date('2020-03-06T09:00-05:00'),
    },
    {
      name: 'Jeffrey Steadman',
      npi: '32620686932',
      firstAvailability: new Date('2020-03-06T09:45-05:00'),
    },
    {
      npi: '30889020178',
      name: 'Denise Mahoney',
      firstAvailability: new Date('2020-03-04T16:00:00.000Z')
    }
  ]);
});

function getDoctorDetail(t: EC, npi: string, expected: DoctorDetail | null) {
  const actual = t.context.index.getDoctorDetail(new Date('2020-03-03T09:00-05:00'), npi);
  t.deepEqual(actual, expected);
}

getDoctorDetail.title = (title: string) => `getDoctorDetail: ${title}`;

test('John Dorian', getDoctorDetail, '31158299703', {
  name: 'John Dorian',
  npi: '31158299703',
  zipCode: '10012',
  features: [
    Feature.OnlyNecessaryLabs,
    Feature.OnlyNecessaryInvasiveStudies,
    Feature.OnlyNecessaryImagingStudies,
    Feature.OnlyIndicatedMedications,
  ],
  availability: [
    {
      time: new Date('2020-03-04T15:15-05:00'),
      lengthMinutes: 15,
    },
    {
      time: new Date('2020-03-06T09:00-05:00'),
      lengthMinutes: 30,
    },
    {
      time: new Date('2020-03-06T09:30-05:00'),
      lengthMinutes: 30,
    },
  ],
});

test('Christopher Turk', getDoctorDetail, '37789895608', {
  name: 'Christopher Turk',
  npi: '37789895608',
  zipCode: '10012',
  features: [
    Feature.OnlyNecessaryInvasiveStudies,
    Feature.OnlyNecessaryImagingStudies,
  ],
  availability: [],
});

test('Elliot Reid', getDoctorDetail, '37695648407', {
  name: 'Elliot Reid',
  npi: '37695648407',
  zipCode: '10012',
  features: [
    Feature.OnlyNecessaryLabs,
    Feature.OnlyNecessaryInvasiveStudies,
    Feature.OnlyNecessaryImagingStudies,
  ],
  availability: [
    {
      time: new Date('2020-03-03T13:45-05:00'),
      lengthMinutes: 15,
    },
    {
      time: new Date('2020-03-04T16:00-05:00'),
      lengthMinutes: 30,
    },
    {
      time: new Date('2020-03-05T09:15-05:00'),
      lengthMinutes: 15,
    },
    {
      time: new Date('2020-03-05T14:00-05:00'),
      lengthMinutes: 15,
    },
    {
      time: new Date('2020-03-06T15:30-05:00'),
      lengthMinutes: 30,
    },
  ],
});

test('Denise Mahoney', getDoctorDetail, '30889020178', {
  name: 'Denise Mahoney',
  npi: '30889020178',
  zipCode: '10012',
  features: [
    Feature.OnlyNecessaryInvasiveStudies,
    Feature.PTBeforeSurgery,
    Feature.OnlyIndicatedMedications,
  ],
  availability: [
    {
      time: new Date('2020-03-04T11:00-05:00'),
      lengthMinutes: 30,
    },
    {
      time: new Date('2020-03-04T14:30-05:00'),
      lengthMinutes: 15,
    },
    {
      time: new Date('2020-03-06T17:00-05:00'),
      lengthMinutes: 30,
    },
  ],
});

test('Kim Briggs', getDoctorDetail, '37323270532', null);

test('Molly Clock', getDoctorDetail, '34311919416', {
  name: 'Molly Clock',
  npi: '34311919416',
  zipCode: '10012',
  features: [
    Feature.OnlyNecessaryLabs,
    Feature.OnlyNecessaryInvasiveStudies,
    Feature.OnlyNecessaryImagingStudies,
    Feature.OnlyIndicatedMedications,
  ],
  availability: [
    {
      time: new Date('2020-03-05T14:30-05:00'),
      lengthMinutes: 15,
    },
    {
      time: new Date('2020-03-05T14:45-05:00'),
      lengthMinutes: 15,
    },
    {
      time: new Date('2020-03-06T17:15-05:00'),
      lengthMinutes: 15,
    },
  ],
});

test('Jeffrey Steadman', getDoctorDetail, '32620686932', {
  name: 'Jeffrey Steadman',
  npi: '32620686932',
  zipCode: '10012',
  features: [
    Feature.OnlyNecessaryLabs,
    Feature.OnlyNecessaryInvasiveStudies,
    Feature.OnlyIndicatedMedications,
  ],
  availability: [
    {
      time: new Date('2020-03-05T14:30-05:00'),
      lengthMinutes: 60,
    },
    {
      time: new Date('2020-03-06T09:45-05:00'),
      lengthMinutes: 30,
    }
  ],
});

test('Simon Reid', getDoctorDetail, '36977259860', {
  name: 'Simon Reid',
  npi: '36977259860',
  zipCode: '10002',
  features: [
    Feature.OnlyNecessaryLabs,
    Feature.OnlyNecessaryInvasiveStudies,
    Feature.OnlyNecessaryImagingStudies,
    Feature.PTBeforeSurgery,
    Feature.OnlyIndicatedMedications,
  ],
  availability: [
    {
      time: new Date('2020-03-05T13:30-05:00'),
      lengthMinutes: 30,
    },
    {
      time: new Date('2020-03-06T11:00-05:00'),
      lengthMinutes: 30,
    },
  ],
});

test('Peter Fisher', getDoctorDetail, '31674231089', {
  name: 'Peter Fisher',
  npi: '31674231089',
  zipCode: '10010',
  features: [
    Feature.OnlyNecessaryInvasiveStudies,
    Feature.OnlyNecessaryImagingStudies,
    Feature.OnlyIndicatedMedications,
  ],
  availability: [
    {
      time: new Date('2020-03-05T14:30-05:00'),
      lengthMinutes: 15,
    },
    {
      time: new Date('2020-03-06T09:30-05:00'),
      lengthMinutes: 30
    },
    {
      time: new Date('2020-03-06T13:00-05:00'),
      lengthMinutes: 15,
    },
  ],
});
